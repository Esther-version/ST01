plugins {
    id 'java'
    id 'application'
    id "de.undercouch.download" version "5.3.0"
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

mainClassName = 'de.unitrier.st.core.Main'

javafx {
    version = '11.0.2'
    modules = ['javafx.controls']
}

//application {
//    mainClass = 'de.unitrier.st.core.Main'
//}



repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10'
    // https://mvnrepository.com/artifact/junit/junit
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.openjfx/javafx
    implementation group: 'org.openjfx', name: 'javafx', version: '11', ext: 'pom'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        /*resources {
            srcDirs = ['src/resources']
        }*/
    }
}



task downloadFile(type: Download) {
    //src 'http://www.example.com/index.html'
    src 'https://datahub.io/core/covid-19/r/covid-19_zip.zip'
    dest file("$buildDir/tmp")
    overwrite true
}

task downloadAndUnzipFile (type: Copy, dependsOn: downloadFile) {
    duplicatesStrategy = DuplicatesStrategy.INHERIT
    from zipTree("$buildDir/tmp/covid-19_zip.zip")
    into file("src/main/resources")
    //src/main/resources/
    rename { fileName ->
        "countries-aggregated_json.json"
    }
}


task buildCore (type: JavaCompile){
    source = sourceSets.main.java.srcDirs
    exclude 'de/unitrier/st/ui'
    classpath = sourceSets.main.compileClasspath
    destinationDir = new File("${buildDir}/classes/java/main")
    finalizedBy(downloadAndUnzipFile)
    finalizedBy(test)
}

task buildUI (type: JavaCompile) {
    source = sourceSets.main.java.srcDirs
    classpath = sourceSets.main.compileClasspath
    destinationDir = new File("${buildDir}/classes/java/main")
    finalizedBy(downloadAndUnzipFile)
    finalizedBy(test)
}

task runCore (type: JavaExec, dependsOn: buildCore) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'de.unitrier.st.core.Main'
}

task runUI (type: JavaExec, dependsOn: buildUI) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'de.unitrier.st.core.Main'
}





